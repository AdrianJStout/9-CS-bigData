#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil toc:nil html-style:nil

#+TITLE: Little Big Data
#+AUTHOR: Stephen Brown

#+BEGIN_HTML
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/stsb11/7-SC-boards">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week1</a></li>
      <li><a href="2_Lesson.html">Week2</a></li>
      <li><a href="3_Lesson.html">Week3</a></li>
      <li><a href="4_Lesson.html">Week4</a></li>
    </ul>
  </div>
#+END_HTML
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Graph-ics
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- Graphs are important when a human needs a visualisation of a large data set. 
- In this lesson, we're going to investigate climate change in the UK since about 1930, and you'll be able to draw your own conclusions about global warming.
- Before we get too carried away, we'll start by drawing a simple line graph and then build up to something more elaborate.
- Load up IDLE, start a new program (File -> New) and copy the code below into the window:

#+begin_src python   
# matplotlib - the Python graph-drawing library
import matplotlib.pyplot as plt
import numpy

# Set the X and Y values (same number of elements in both lists)
yVals= [0,1,4,9,16,25,36,49,64,81,100,121]
xVals= [0,1,2,3,4,5,6,7,8,9,10,11]

# Plot the graph line
plt.plot(xVals,yVals)

# Add some labels
plt.xlabel('x axis')
plt.ylabel('y axis')
plt.title('Graph title goes here')

# Show the finished graph
plt.show()
#+end_src 

- One of the great things with Python is its ability to import [[https://xkcd.com/353/][new functionality]] to give it new abilities, like drawing graphics, playing sound, drawing graphs, performing complex mathematics and so on. 
- Our program starts by importing a graph-drawing library. 
- We then set the values we want to assign to the X and Y axes. 
    - I've plotted a little bit of the y = x^2 graph, from x=0 to 11. 
- We get Python to plot the actual graph
- And we then add labels to the X and Y axis.
- Finally, we ask Python to show the rendered graph to us. 
- Change some of the values, and plot a different line. 
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- As part of a drive to be more transparent, the UK Government have released a little over 25000 data sets for anyone to access. You can browse them [[http://data.gov.uk/data/search][here]].
- We'll look at some climate data from the met office (the UK weather agency). I've picked up the historic weather data for 'valley' in north-west Wales, but you can work on any location you're interested in. 
- Scientists believe that in general, the World is getting hotter over time due to the burning of fossil fuels. We'll write a short program to analyse the data from one weather station and see if we can spot a pattern.
- Our data looks like this when you download it.
- Put this code into a new program

#+begin_src python   
# Import matplotlib, numpy (a maths library) and csv (to deal with the file).
import matplotlib.pyplot as plt
import numpy
import csv

# Open the data file, and read the data in
with open("valleydata.txt", 'r') as csvfile:
    reader =csv.reader(csvfile,delimiter=' ',skipinitialspace=True)
    data = list(reader)
    # Remove the first row, which has the column headers in it.
    data.pop(0)

# Grab the third column of data, and store it in a list.
maxTemps = [float(i[2]) for i in data]
yearlyAverage = []
a=0
b=11

# Loop through, taking 12 months data at a time
while b < len(maxTemps):
    yearlyAverage.append(sum(maxTemps[a:b])/12)
    a += 12
    b += 12

# Set up a list of 1930 to 2014, for use as the X-axis labels
theYears= [int(i) for i in range(1930,2014)]

# Plot the line
plt.plot(theYears,yearlyAverage)

# Add decoration
plt.ylabel('Mean temperature')
plt.xlabel('Year')
plt.title('Mean temperature, 1930-2014')

# Show the finished graph
plt.show()
#+end_src 

- One of the great things with Python is its ability to import [[https://xkcd.com/353/][new functionality]] to give it new abilities, like drawing graphics, playing sound, drawing graphs, performing complex mathematics and so on. 
- Our program starts by importing a graph-drawing library. 
- We then set the values we want to assign to the X and Y axes. 
    - I've plotted a little bit of the y = x^2 graph, from x=0 to 11. 
- We get Python to plot the actual graph
- And we then add labels to the X and Y axis.
- Finally, we ask Python to show the rendered graph to us. 
- Change some of the values, and plot a different line. 
** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- *Silver* - pending
- *Gold* - pending
- *Platinum* - pending
